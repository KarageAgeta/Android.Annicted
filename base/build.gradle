apply plugin: 'com.android.feature'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    baseFeature true
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    buildTypes {
        debug {
            buildConfigField "String", "ANNICT_ACCESS_TOKEN", properties.getProperty("ANNICT_ACCESS_TOKEN")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
kapt {
    generateStubs = true
}

dependencies {
    api "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    application project(':app')
    feature project(':main')
    feature project(':record')

    // Kotlin
    implementation rootProject.ext.kotlin
    // Dagger
    implementation rootProject.ext.dagger
    kapt rootProject.ext.daggerCompiler
    // Rx
    implementation rootProject.ext.rxKotlin
    implementation rootProject.ext.rxAndroid
    implementation rootProject.ext.rxJava
    // Retrofit
    implementation rootProject.ext.retrofit
    implementation rootProject.ext.retrofitAdapter
    implementation rootProject.ext.retrofitConverter
    // OkHttp
    implementation rootProject.ext.okHttpLogging
    // Timber
    implementation rootProject.ext.timber
    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
